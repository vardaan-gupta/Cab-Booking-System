name: Scheduled Docs

on:
  schedule:
    - cron: '0 0 * * *'  # Runs at 12:00 AM (midnight) UTC daily
  workflow_dispatch:  # Manual trigger

jobs:
  run-command:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        
    - name: Install GitHub Copilot CLI
      run: |
        echo "Installing GitHub Copilot CLI at $(date)"
        npm install -g @github/copilot
        
    - name: Check for changes
      id: changes
      run: |
        git fetch --prune --unshallow || git fetch --prune origin "+refs/heads/*:refs/remotes/origin/*"
        if git rev-parse --verify HEAD~1 > /dev/null 2>&1; then
          CHANGES=$(git diff --name-only HEAD~1 HEAD)
        else
          CHANGES=$(git ls-files)
        fi
        echo "changes=$CHANGES" >> $GITHUB_OUTPUT
        echo "has_changes=$([ -n "$CHANGES" ] && echo 'true' || echo 'false')" >> $GITHUB_OUTPUT
        
    - name: Set execution condition
      id: should_run
      run: |
        SHOULD_RUN=${{ github.event_name == 'workflow_dispatch' || steps.changes.outputs.has_changes == 'true' }}
        echo "execute=$SHOULD_RUN" >> $GITHUB_OUTPUT
        
    - name: Authenticate and use GitHub Copilot
      if: steps.should_run.outputs.execute == 'true'
      env:
        GITHUB_TOKEN: ${{ secrets.COPILOT_TOKEN }}
      run: |
        echo "Authenticating with GitHub Copilot"
        copilot --version
        echo "Manual trigger - Generating full documentation"
        copilot -p "create a Documentation.md file and add below documentation - Provide a high-level description of the repository purpose and functionality - Include information about the system architecture and main components - Explain how different parts of the system interact with each other" --allow-all-tools
       
    - name: Initialize or Checkout GitHub Wiki
      if: steps.should_run.outputs.execute == 'true'
      env:
        GITHUB_TOKEN: ${{ secrets.COPILOT_TOKEN }}
      run: |
        echo "Attempting to checkout GitHub Wiki"
        if git clone https://$GITHUB_TOKEN@github.com/${{ github.repository }}.wiki.git wiki 2>/dev/null; then
          echo "Wiki repository found and cloned"
          cd wiki
          ls -la
        else
          echo "Wiki repository not found, creating new wiki directory"
          mkdir -p wiki
          cd wiki
          git init
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git remote add origin https://$GITHUB_TOKEN@github.com/${{ github.repository }}.wiki.git
          echo "# Wiki" > Home.md
          git add Home.md
          git commit -m "Initialize wiki"
          git push -u origin master || git push -u origin main
        fi
    
    - name: Copy Documentation to Wiki
      if: steps.should_run.outputs.execute == 'true'
      run: |
        echo "Copying Documentation.md to wiki directory"
        cp Documentation.md wiki/Documentation.md
    
    - name: Commit and Push Changes in Wiki
      if: steps.should_run.outputs.execute == 'true'
      env:
        GITHUB_TOKEN: ${{ secrets.COPILOT_TOKEN }}
      run: |
        echo "Committing and pushing changes in Wiki"
        cd wiki
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git add Documentation.md
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "Automated update of Documentation.md"
          git push origin HEAD:master || git push origin HEAD:main
        fi
      continue-on-error: true
